package com.fun.zpetchain.model;import java.util.LinkedHashMap;import com.alibaba.fastjson.JSONObject;import com.fun.zpetchain.enums.PetEnum;/** * bean of Pet info <br> * <b>Copyright 2018 the original author or authors.</b> *  * @author 2bears * @since * @version 1.0 */public class Pet {	private String id;	private String petId;	private int birthType;	private int mutation;	private int generation; // 代数	private String rareDegree; // 等级	private int rareNum;	// 稀有数	private int petType;	private double amount;  // 售价	private String validCode;	private String petUrl;	private String desc;	private String bgColor;	private String incubateTime;	private String coolingInterval; // 休息时间	private Boolean isCooling; // 是否休息中	private Boolean isAngell; // 是否天使	private Boolean isWhiteEyes; // 是否白眉斗眼	private String shelfStatus;// 1：在售 0：非在售	public static LinkedHashMap<String, String> levelMap = null;	public static LinkedHashMap<String, String> levelValueMap = null;	static {		levelMap = PetEnum.getMapByPrefix("LEVEL_");		levelValueMap = new LinkedHashMap<String, String>();		for (String k : levelMap.keySet()) {			levelValueMap.put(levelMap.get(k), k);		}	}	/**	 * @return the id	 */	public String getId() {		return id;	}	/**	 * @param id	 *            the id to set	 */	public void setId(String id) {		this.id = id;	}	/**	 * @return the petId	 */	public String getPetId() {		return petId;	}	/**	 * @param petId	 *            the petId to set	 */	public void setPetId(String petId) {		this.petId = petId;	}	/**	 * @return the birthType	 */	public int getBirthType() {		return birthType;	}	/**	 * @param birthType	 *            the birthType to set	 */	public void setBirthType(int birthType) {		this.birthType = birthType;	}	/**	 * @return the mutation	 */	public int getMutation() {		return mutation;	}	/**	 * @param mutation	 *            the mutation to set	 */	public void setMutation(int mutation) {		this.mutation = mutation;	}	/**	 * @return the generation	 */	public int getGeneration() {		return generation;	}	/**	 * @param generation	 *            the generation to set	 */	public void setGeneration(int generation) {		this.generation = generation;	}	public String getRareDegree() {		return rareDegree;	}	public void setRareDegree(String rareDegree) {		if (levelMap.containsKey(rareDegree)) {			this.rareDegree = levelMap.get(rareDegree);		} else {			this.rareDegree = rareDegree;		}	}	/**	 * @return the petType	 */	public int getPetType() {		return petType;	}	/**	 * @param petType	 *            the petType to set	 */	public void setPetType(int petType) {		this.petType = petType;	}	/**	 * @return the amount	 */	public double getAmount() {		return amount;	}	/**	 * @param amount	 *            the amount to set	 */	public void setAmount(double amount) {		this.amount = amount;	}	/**	 * @return the validCode	 */	public String getValidCode() {		return validCode;	}	/**	 * @param validCode	 *            the validCode to set	 */	public void setValidCode(String validCode) {		this.validCode = validCode;	}	/**	 * @return the petUrl	 */	public String getPetUrl() {		return petUrl;	}	/**	 * @param petUrl	 *            the petUrl to set	 */	public void setPetUrl(String petUrl) {		this.petUrl = petUrl;	}	/**	 * @return the desc	 */	public String getDesc() {		return desc;	}	/**	 * @param desc	 *            the desc to set	 */	public void setDesc(String desc) {		this.desc = desc;	}	/**	 * @return the bgColor	 */	public String getBgColor() {		return bgColor;	}	/**	 * @param bgColor	 *            the bgColor to set	 */	public void setBgColor(String bgColor) {		this.bgColor = bgColor;	}	/**	 * @return the incubateTime	 */	public String getIncubateTime() {		return incubateTime;	}	/**	 * @param incubateTime	 *            the incubateTime to set	 */	public void setIncubateTime(String incubateTime) {		this.incubateTime = incubateTime;	}	/**	 * @return the coolingInterval	 */	public String getCoolingInterval() {		return coolingInterval;	}	/**	 * @param coolingInterval	 *            the coolingInterval to set	 */	public void setCoolingInterval(String coolingInterval) {		this.coolingInterval = coolingInterval;	}	/**	 * @return the isCooling	 */	public Boolean getIsCooling() {		return isCooling;	}	/**	 * @param isCooling	 *            the isCooling to set	 */	public void setIsCooling(Boolean isCooling) {		this.isCooling = isCooling;	}	public int getRareNum() {		return rareNum;	}	public void setRareNum(int rareNum) {		this.rareNum = rareNum;	}	public Boolean getIsAngell() {		return isAngell;	}	public void setIsAngell(Boolean isAngell) {		this.isAngell = isAngell;	}	public String getShelfStatus() {		return shelfStatus;	}	public void setShelfStatus(String shelfStatus) {		this.shelfStatus = shelfStatus;	}	@Override	public String toString() {		return JSONObject.toJSONString(this);	}	@Override	public int hashCode() {		final int prime = 31;		int result = 1;		long temp;		temp = Double.doubleToLongBits(amount);		result = prime * result + (int) (temp ^ (temp >>> 32));		result = prime * result + ((bgColor == null) ? 0 : bgColor.hashCode());		result = prime * result + birthType;		result = prime * result + ((coolingInterval == null) ? 0 : coolingInterval.hashCode());		result = prime * result + ((desc == null) ? 0 : desc.hashCode());		result = prime * result + generation;		result = prime * result + ((id == null) ? 0 : id.hashCode());		result = prime * result + ((incubateTime == null) ? 0 : incubateTime.hashCode());		result = prime * result + ((isAngell == null) ? 0 : isAngell.hashCode());		result = prime * result + ((isCooling == null) ? 0 : isCooling.hashCode());		result = prime * result + mutation;		result = prime * result + ((petId == null) ? 0 : petId.hashCode());		result = prime * result + petType;		result = prime * result + ((petUrl == null) ? 0 : petUrl.hashCode());		result = prime * result + ((rareDegree == null) ? 0 : rareDegree.hashCode());		result = prime * result + rareNum;		result = prime * result + ((shelfStatus == null) ? 0 : shelfStatus.hashCode());		result = prime * result + ((validCode == null) ? 0 : validCode.hashCode());		return result;	}	@Override	public boolean equals(Object obj) {		if (this == obj)			return true;		if (obj == null)			return false;		if (getClass() != obj.getClass())			return false;		Pet other = (Pet) obj;		if (Double.doubleToLongBits(amount) != Double.doubleToLongBits(other.amount))			return false;		if (bgColor == null) {			if (other.bgColor != null)				return false;		} else if (!bgColor.equals(other.bgColor))			return false;		if (birthType != other.birthType)			return false;		if (coolingInterval == null) {			if (other.coolingInterval != null)				return false;		} else if (!coolingInterval.equals(other.coolingInterval))			return false;		if (desc == null) {			if (other.desc != null)				return false;		} else if (!desc.equals(other.desc))			return false;		if (generation != other.generation)			return false;		if (id == null) {			if (other.id != null)				return false;		} else if (!id.equals(other.id))			return false;		if (incubateTime == null) {			if (other.incubateTime != null)				return false;		} else if (!incubateTime.equals(other.incubateTime))			return false;		if (isAngell == null) {			if (other.isAngell != null)				return false;		} else if (!isAngell.equals(other.isAngell))			return false;		if (isCooling == null) {			if (other.isCooling != null)				return false;		} else if (!isCooling.equals(other.isCooling))			return false;		if (mutation != other.mutation)			return false;		if (petId == null) {			if (other.petId != null)				return false;		} else if (!petId.equals(other.petId))			return false;		if (petType != other.petType)			return false;		if (petUrl == null) {			if (other.petUrl != null)				return false;		} else if (!petUrl.equals(other.petUrl))			return false;		if (rareDegree == null) {			if (other.rareDegree != null)				return false;		} else if (!rareDegree.equals(other.rareDegree))			return false;		if (rareNum != other.rareNum)			return false;		if (shelfStatus == null) {			if (other.shelfStatus != null)				return false;		} else if (!shelfStatus.equals(other.shelfStatus))			return false;		if (validCode == null) {			if (other.validCode != null)				return false;		} else if (!validCode.equals(other.validCode))			return false;		return true;	}	public Boolean getIsWhiteEyes() {		return isWhiteEyes;	}	public void setIsWhiteEyes(Boolean isWhiteEyes) {		this.isWhiteEyes = isWhiteEyes;	}}